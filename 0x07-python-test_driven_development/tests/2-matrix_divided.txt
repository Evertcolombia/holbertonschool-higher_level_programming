===============================
0. Integer addition module
===============================

Import module:
==============
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test case #0: A test case without parameters
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test case #1: A test case with integer elements and integer divider
	>>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test case #2: A test case with integer and float elements and float divider
	>>> matrix = [[1.0, -2.0, -3.0],[-4.0, 5.0, -6.0]]
	>>> matrix_divided(matrix, 3.0)
	[[0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]

Test case #3: A test case with infinite elements to divide
	>>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]
	>>> matrix_divided(matrix, 3)
	[[inf, inf, inf], [inf, inf, inf]]

Test case #6: A test case with lists of integers and floats within
the rows of the matrix
	>>> matrix = [[[10.0], [65], [37.0]],[[40], [15.0], [66]]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #7: A test case with strings within the rows of the matrix
	>>> matrix = [['1', '2', '3'], ['4', '5', '6']]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #12: A test case with a 'None' divider
	>>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	TypeError: div must be a number

Test case #13: A test case with a string divider
	>>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
	>>> matrix_divided(matrix, 'Monty Python')
	Traceback (most recent call last):
	TypeError: div must be a number

Test case #16: A test case with the type of value returned
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> type(matrix_divided(matrix, 3))
	<class 'list'>

